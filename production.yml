version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: toxsign:latest
    depends_on:
      - postgres
      - redis
    volumes:
       - /data/toxsign/conda_envs/condaR_TCL:/app/tools/conda_envs/condaR_TCL
       - /data/toxsign/media:/app/toxsign/media
       - /data/toxsign/ChemPSy:/chempsy:ro
    env_file:
      - ./.envs/.production/.django_prod
      - ./.envs/.production/.postgres_prod
    command: /start
    networks:
      - toxsign

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: toxsign_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    env_file:
      - ./.envs/.production/.postgres_prod
    networks:
      - toxsign

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    environment:
        - discovery.type=single-node
    networks:
      - toxsign

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: toxsign_production_nginx
    volumes:
      - ./staticfiles:/app/staticfiles
      - /data/toxsign/media:/app/toxsign/media
    depends_on:
      - django
      - flower
    networks:
      - toxsign
      - web
    deploy:
      labels:
        - "traefik.http.routers.toxsign-nginx.rule=(Host(`toxsign.scilicium.com`)"
        - "traefik.http.routers.toxsign-nginx.tls=true"
        - "traefik.http.routers.toxsign-nginx.entryPoints=websecure"
        - "traefik.http.services.toxsign-nginx.loadbalancer.server.port=80"

  redis:
    image: redis:3.2
    networks:
      - toxsign

  celeryworker:
    <<: *django
    image: toxsign_production_celeryworker
    command: /start-celeryworker
    ports: []

  celerybeat:
    <<: *django
    image: toxsign_production_celerybeat
    command: /start-celerybeat
    ports: []

  flower:
    <<: *django
    image: toxsign_production_flower
    command: /start-flower
    ports: []

networks:
  web:
    external: true
  toxsign:
    internal: true
